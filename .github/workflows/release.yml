name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  changelog-enforcement:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep '^version =' pyproject.toml | head -1 | cut -d '"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Check CHANGELOG for version
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          if ! grep -q "$VERSION" CHANGELOG.md; then
            echo "CHANGELOG.md does not contain entry for version $VERSION" >&2
            exit 1
          fi

  docker-and-helm-release:
    needs: changelog-enforcement
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep '^version =' pyproject.toml | head -1 | cut -d '"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          docker build -t your-org/sentinel-memory-service:$VERSION .
          docker push your-org/sentinel-memory-service:$VERSION
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.13.3
      - name: Package Helm chart
        run: helm package helm --destination packaged-helm
      - name: Upload Helm chart artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart
          path: packaged-helm/*.tgz