name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: .
        shell: bash
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      CHROMA_HOST: ${{ secrets.CHROMA_HOST }}
      CHROMA_PORT: ${{ secrets.CHROMA_PORT }}
      APP_CORS_ORIGINS: ${{ secrets.APP_CORS_ORIGINS }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=\"$HOME/.local/bin:$PATH\"" >> $GITHUB_ENV
      - name: Install dependencies
        run: poetry install --with dev
      - name: Prepare environment file
        run: cp .env.example .env
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      - name: Lint
        run: make lint
      - name: Test
        run: make test
      - name: Ingestion Test
        run: make ingest-test
      - name: Check required env vars
        run: make env-lint

  lint-and-validate-helm:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.13.3
      - name: Create Chart.yaml
        run: |
          cat <<EOF > helm/Chart.yaml
          apiVersion: v2
          name: sentinel-memory-service
          description: A Helm chart for deploying the Sentinel Memory Service.
          version: 0.1.0
          appVersion: "1.0.0"
          EOF
      - name: Lint Helm chart
        run: helm lint helm
